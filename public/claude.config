
claude config add ignorePatterns "node_modules/**", "public/**", "dist/**", ".vscode/**"
claude config add ignorePatterns .prettierrc, .editorconfig, .eslintrc.cjs, .gitignore, index.html, LICENCE, package-lock.json

en src/assets se agregado 3 archivos CSS: 
  src/assets/sizes.css
  src/assets/theme-dark.css
  src/assets/themes-light.css

# Especificaciones técnicas para actualización de estilos en proyecto Vue

La tarea a realizar es cambiar los estilos de este proyecto Vue del actual al reflejado en los archivos que se detallan a continuacion.

Archivos CSS nuevos con los datos a implementar:
  - src/assets/sizes.css
  - src/assets/theme-dark.css
  - src/assets/themes-light.css

## Contexto del proyecto
- El proyecto está desarrollado en Vue y es completamente funcional
- Se requiere actualizar los estilos actuales con los definidos en los archivos CSS adjuntos
- Los nuevos archivos CSS no fueron creados específicamente para este proyecto, pero contienen la visión artística y de UX deseada

## Tareas específicas

1. **Análisis de estructura actual**
   - Identificar todos los componentes Vue que utilizan estilos
   - Mapear la jerarquía de componentes y sus relaciones estilísticas
   - Documentar las clases CSS actualmente utilizadas en cada componente

2. **Análisis de los nuevos archivos CSS**
   - Catalogar todas las clases, variables y elementos de estilo en los nuevos CSS
   - Identificar la paleta de colores, tipografías, espaciados y otros elementos de diseño
   - Documentar las convenciones de nomenclatura utilizadas

3. **Plan de migración**
   - Crear una tabla de equivalencias entre los estilos actuales y los nuevos
   - Identificar posibles conflictos o inconsistencias
   - Determinar si se conservará la estructura actual de archivos CSS o se adoptará la nueva

4. **Implementación**
   - Modificar los componentes Vue para utilizar las nuevas clases CSS
   - Ajustar las referencias a variables de estilo (si se utilizan)
   - Implementar los nuevos estilos respetando la arquitectura del proyecto
   - Asegurar que la funcionalidad no se vea afectada por los cambios de estilo

5. **Pruebas de calidad**
   - Verificar que todos los componentes se visualicen correctamente en diferentes resoluciones
   - Comprobar que la experiencia de usuario se mantiene o mejora
   - Validar que no existan regresiones visuales o funcionales

## Consideraciones adicionales
- Mantener la responsividad existente en todos los componentes
- Respetar los breakpoints definidos en el nuevo CSS
- Conservar las animaciones y transiciones si están presentes en el proyecto original
- Asegurar la accesibilidad (contraste, tamaño de fuentes, etc.)

## Entregables esperados
- Proyecto actualizado con los nuevos estilos implementados
- Documentación de los cambios realizados
- Guía de estilos resultante para futuros desarrollos


